# Dashboard Example - Comprehensive Blueprint Configuration
# This example demonstrates the improved dashboard system with backend and frontend integration

# Models for the dashboard
models:
  User:
    name: string:400
    email: string:400 unique
    email_verified_at: timestamp nullable
    password: string:400
    remember_token: string:100 nullable
    timestamps: true
    relationships:
      hasMany:
        - Post
        - Comment
    fillable:
      - name
      - email
      - password
    hidden:
      - password
      - remember_token
    casts:
      email_verified_at: datetime
    rules:
      name: required|string|max:400
      email: required|email|unique:users,email
      password: required|string|min:8

  Post:
    title: string:400
    slug: string:400 unique
    content: longtext
    excerpt: text nullable
    featured_image: string:400 nullable
    status: enum:published,draft,archived default:published
    published_at: timestamp nullable
    author_id: id:unsigned foreign:users.id
    timestamps: true
    relationships:
      belongsTo:
        - User:author
      hasMany:
        - Comment
    fillable:
      - title
      - slug
      - content
      - excerpt
      - featured_image
      - status
      - published_at
      - author_id
    rules:
      title: required|string|max:400
      slug: required|string|unique:posts,slug
      content: required|string
      status: required|in:published,draft,archived

  Comment:
    content: text
    status: enum:approved,pending,spam default:pending
    author_name: string:400
    author_email: string:400
    post_id: id:unsigned foreign:posts.id
    user_id: id:unsigned nullable foreign:users.id
    timestamps: true
    relationships:
      belongsTo:
        - Post
        - User:author
    fillable:
      - content
      - status
      - author_name
      - author_email
      - post_id
      - user_id
    rules:
      content: required|string
      author_name: required|string|max:400
      author_email: required|email

# Controllers for API endpoints
controllers:
  Api\UserController:
    resource: api
    model: User
    methods:
      - index
      - store
      - show
      - update
      - destroy
    api_resource: true
    validation: true
    authorization: true

  Api\PostController:
    resource: api
    model: Post
    methods:
      - index
      - store
      - show
      - update
      - destroy
    api_resource: true
    validation: true
    authorization: true
    relationships:
      - author
      - comments

  Api\CommentController:
    resource: api
    model: Comment
    methods:
      - index
      - store
      - show
      - update
      - destroy
    api_resource: true
    validation: true
    authorization: true
    relationships:
      - post
      - author

# Dashboard configuration
dashboards:
  AdminDashboard:
    title: "Admin Dashboard"
    description: "Comprehensive administrative dashboard for managing the application"
    layout: "admin"
    theme:
      primary_color: "#1f2937"
      secondary_color: "#6b7280"
      accent_color: "#3b82f6"
      background_color: "#f9fafb"
      text_color: "#1f2937"
      border_color: "#e5e7eb"
      success_color: "#10b981"
      warning_color: "#f59e0b"
      error_color: "#ef4444"
    permissions: 
      - "view-dashboard"
      - "manage-users"
      - "manage-posts"
      - "manage-comments"
      - "view-analytics"
    navigation:
      - name: "overview"
        title: "Overview"
        route: "/dashboard"
        icon: "home"
        permission: "view-dashboard"
      - name: "users"
        title: "Users"
        route: "/dashboard/users"
        icon: "users"
        permission: "manage-users"
      - name: "posts"
        title: "Posts"
        route: "/dashboard/posts"
        icon: "document-text"
        permission: "manage-posts"
      - name: "comments"
        title: "Comments"
        route: "/dashboard/comments"
        icon: "chat-bubble-left-right"
        permission: "manage-comments"
      - name: "analytics"
        title: "Analytics"
        route: "/dashboard/analytics"
        icon: "chart-bar"
        permission: "view-analytics"
      - name: "settings"
        title: "Settings"
        route: "/dashboard/settings"
        icon: "cog"
        permission: "manage-settings"
    widgets:
      UserStats:
        type: "metric"
        title: "Total Users"
        model: "User"
        config:
          format: "number"
          color: "blue"
          metric_type: "count"
          refresh_interval: 300
          cache_enabled: true
          cache_ttl: 60
        position:
          area: "top-left"
          col_span: 1
          row_span: 1
        permissions:
          - "view-users"

      PostStats:
        type: "metric"
        title: "Total Posts"
        model: "Post"
        config:
          format: "number"
          color: "green"
          metric_type: "count"
          refresh_interval: 300
        position:
          area: "top-center"
          col_span: 1
          row_span: 1
        permissions:
          - "view-posts"

      CommentStats:
        type: "metric"
        title: "Total Comments"
        model: "Comment"
        config:
          format: "number"
          color: "purple"
          metric_type: "count"
          refresh_interval: 300
        position:
          area: "top-right"
          col_span: 1
          row_span: 1
        permissions:
          - "view-comments"

      RecentPosts:
        type: "table"
        title: "Recent Posts"
        model: "Post"
        config:
          limit: 10
          sort_by: "created_at"
          sort_order: "desc"
          columns:
            - "title"
            - "author.name"
            - "status"
            - "created_at"
          refresh_interval: 600
        position:
          area: "main-left"
          col_span: 2
          row_span: 2
        permissions:
          - "view-posts"

      PostActivity:
        type: "chart"
        title: "Post Activity"
        model: "Post"
        config:
          chart_type: "line"
          timeframe: "30d"
          refresh_interval: 1800
          cache_enabled: true
          cache_ttl: 300
        position:
          area: "main-right"
          col_span: 2
          row_span: 2
        permissions:
          - "view-analytics"

      PendingComments:
        type: "list"
        title: "Pending Comments"
        model: "Comment"
        config:
          limit: 5
          sort_by: "created_at"
          sort_order: "desc"
          filters:
            - "status"
          refresh_interval: 300
        position:
          area: "bottom-left"
          col_span: 1
          row_span: 1
        permissions:
          - "manage-comments"

      UserGrowth:
        type: "chart"
        title: "User Growth"
        model: "User"
        config:
          chart_type: "bar"
          timeframe: "7d"
          refresh_interval: 3600
        position:
          area: "bottom-center"
          col_span: 2
          row_span: 1
        permissions:
          - "view-analytics"

      SystemHealth:
        type: "metric"
        title: "System Health"
        config:
          format: "status"
          color: "green"
          refresh_interval: 60
        position:
          area: "bottom-right"
          col_span: 1
          row_span: 1
        permissions:
          - "view-system"

    api:
      dashboard: "/api/dashboard"
      config: "/api/dashboard/config"
      plugins: "/api/dashboard/plugins"
      refresh: "/api/dashboard/refresh"
      stats: "/api/dashboard/stats"
      widgets: "/api/dashboard/widgets"
      theme: "/api/dashboard/theme"
      settings: "/api/dashboard/settings"
      analytics: "/api/dashboard/analytics"
      health: "/api/dashboard/health"

    settings:
      cache_enabled: true
      cache_ttl: 300
      real_time_updates: false
      auto_refresh: true
      refresh_interval: 30000
      max_widgets_per_row: 4
      enable_plugin_system: true
      enable_analytics: true
      enable_export: true
      enable_import: true

# Frontend components
frontend:
  components:
    DashboardLayout:
      type: "layout"
      framework: "react"
      props:
        - dashboard: "Dashboard"
        - children: "ReactNode"
      features:
        - responsive_design
        - theme_support
        - navigation
        - plugin_integration

    DashboardPage:
      type: "page"
      framework: "react"
      props:
        - dashboard: "Dashboard"
        - widgets: "Record<string, WidgetData>"
      features:
        - widget_rendering
        - data_fetching
        - error_handling
        - loading_states

    MetricWidget:
      type: "widget"
      framework: "react"
      props:
        - data: "any"
        - config: "WidgetConfig"
        - onRefresh: "() => void"
      features:
        - value_display
        - trend_indicator
        - formatting
        - color_coding

    TableWidget:
      type: "widget"
      framework: "react"
      props:
        - data: "any"
        - config: "WidgetConfig"
        - onRefresh: "() => void"
      features:
        - data_table
        - pagination
        - sorting
        - filtering

    ChartWidget:
      type: "widget"
      framework: "react"
      props:
        - data: "any"
        - config: "WidgetConfig"
        - onRefresh: "() => void"
      features:
        - chart_rendering
        - multiple_types
        - responsive
        - animations

    ListWidget:
      type: "widget"
      framework: "react"
      props:
        - data: "any"
        - config: "WidgetConfig"
        - onRefresh: "() => void"
      features:
        - item_list
        - limit_display
        - item_actions

# API Resources
api_resources:
  UserResource:
    model: User
    attributes:
      - id
      - name
      - email
      - email_verified_at
      - created_at
      - updated_at
    relationships:
      - posts
      - comments
    methods:
      - toArray
      - toResponse

  PostResource:
    model: Post
    attributes:
      - id
      - title
      - slug
      - content
      - excerpt
      - featured_image
      - status
      - published_at
      - created_at
      - updated_at
    relationships:
      - author
      - comments
    methods:
      - toArray
      - toResponse

  CommentResource:
    model: Comment
    attributes:
      - id
      - content
      - status
      - author_name
      - author_email
      - created_at
      - updated_at
    relationships:
      - post
      - author
    methods:
      - toArray
      - toResponse

# Form Requests
form_requests:
  UserRequest:
    model: User
    rules:
      name: "required|string|max:400"
      email: "required|email|unique:users,email"
      password: "required|string|min:8"
    authorization: true

  PostRequest:
    model: Post
    rules:
      title: "required|string|max:400"
      slug: "required|string|unique:posts,slug"
      content: "required|string"
      status: "required|in:published,draft,archived"
      author_id: "required|exists:users,id"
    authorization: true

  CommentRequest:
    model: Comment
    rules:
      content: "required|string"
      author_name: "required|string|max:400"
      author_email: "required|email"
      post_id: "required|exists:posts,id"
    authorization: true

# Policies
policies:
  UserPolicy:
    model: User
    methods:
      - viewAny
      - view
      - create
      - update
      - delete
      - restore
      - forceDelete

  PostPolicy:
    model: Post
    methods:
      - viewAny
      - view
      - create
      - update
      - delete
      - restore
      - forceDelete

  CommentPolicy:
    model: Comment
    methods:
      - viewAny
      - view
      - create
      - update
      - delete
      - restore
      - forceDelete

# Seeders
seeders:
  UserSeeder:
    model: User
    count: 50
    data:
      name: "{{ fake('name') }}"
      email: "{{ fake('email') }}"
      password: "{{ bcrypt('password') }}"
      email_verified_at: "{{ now() }}"

  PostSeeder:
    model: Post
    count: 100
    data:
      title: "{{ fake('sentence') }}"
      slug: "{{ fake('slug') }}"
      content: "{{ fake('paragraphs', 3) }}"
      excerpt: "{{ fake('sentence') }}"
      status: "{{ fake('randomElement', ['published', 'draft']) }}"
      published_at: "{{ fake('dateTimeBetween', '-1 year', 'now') }}"
      author_id: "{{ fake('numberBetween', 1, 50) }}"

  CommentSeeder:
    model: Comment
    count: 200
    data:
      content: "{{ fake('paragraph') }}"
      status: "{{ fake('randomElement', ['approved', 'pending', 'spam']) }}"
      author_name: "{{ fake('name') }}"
      author_email: "{{ fake('email') }}"
      post_id: "{{ fake('numberBetween', 1, 100) }}"
      user_id: "{{ fake('optional', 0.3, fake('numberBetween', 1, 50)) }}"

# Configuration
config:
  dashboard:
    title: "Admin Dashboard"
    description: "Comprehensive administrative dashboard"
    version: "1.0.0"
    layout: "admin"
    cache:
      enabled: true
      ttl: 300
      widget_ttl: 60
    theme:
      primary_color: "#1f2937"
      secondary_color: "#6b7280"
      accent_color: "#3b82f6"
      background_color: "#f9fafb"
      text_color: "#1f2937"
      border_color: "#e5e7eb"
      success_color: "#10b981"
      warning_color: "#f59e0b"
      error_color: "#ef4444"
    plugins:
      cache_enabled: true
      cache_ttl: 300
    analytics:
      enabled: true
      track_widget_views: true
      track_api_calls: true
    export:
      enabled: true
      formats:
        - json
        - csv
        - xlsx
    import:
      enabled: true
      max_file_size: 10485760
    health:
      enabled: true
      check_interval: 300 