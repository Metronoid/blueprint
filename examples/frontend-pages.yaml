frontend:
  DashboardPage:
    framework: react
    type: page
    layout: AdminLayout
    route: /dashboard
    props:
      user: User
      stats: DashboardStats
    state:
      isLoading: true
      activeTab: 'overview'
    methods:
      loadDashboard: |
        setLoading(true);
        const data = await fetchDashboardData();
        setStats(data);
        setLoading(false);
      switchTab: |
        setActiveTab(tab);
    dependencies:
      - name: AdminLayout
        from: '../layouts/AdminLayout'
      - name: DashboardStats
        from: '../components/DashboardStats'
    api:
      fetchDashboard:
        url: '/api/dashboard'
        method: GET

  ProductDetailPage:
    framework: vue
    type: page
    layout: DefaultLayout
    route: /products/:id
    props:
      product: Product
      reviews: Review[]
    state:
      selectedImage: 0
      quantity: 1
      isAddingToCart: false
    methods:
      addToCart: |
        isAddingToCart = true;
        await cart.add(product, quantity);
        isAddingToCart = false;
      selectImage: |
        selectedImage = index;
    styles:
      '.product-detail':
        display: 'grid'
        gridTemplateColumns: '1fr 1fr'
        gap: '2rem'
      '.product-images':
        display: 'flex'
        flexDirection: 'column'
        gap: '1rem'
    api:
      addToCart:
        url: '/api/cart/add'
        method: POST
      fetchProduct:
        url: '/api/products/:id'
        method: GET

  UserSettingsPage:
    framework: svelte
    type: page
    layout: UserLayout
    route: /settings
    props:
      user: User
      preferences: UserPreferences
    state:
      isSaving: false
      formData: {}
      errors: {}
    methods:
      saveSettings: |
        isSaving = true;
        try {
          await updateUserSettings(formData);
          errors = {};
        } catch (error) {
          errors = error.response.data.errors;
        }
        isSaving = false;
      updateForm: |
        formData = { ...formData, ...data };
    styles:
      '.settings-form':
        maxWidth: '600px'
        margin: '0 auto'
        padding: '2rem'
      '.form-group':
        marginBottom: '1rem'
      '.error':
        color: 'red'
        fontSize: '0.875rem' 