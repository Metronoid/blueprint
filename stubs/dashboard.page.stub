import React, { useState, useEffect } from 'react';
import { Head } from '@inertiajs/react';

interface {{ component }}Props {
    dashboard: {
        title: string;
        description: string;
        layout: string;
        theme: {
            primary_color: string;
            secondary_color: string;
            accent_color: string;
        };
        navigation: Array<{
            name: string;
            title: string;
            route: string;
            icon: string;
        }>;
        widgets: Record<string, any>;
    };
    widgets: Record<string, any>;
}

export default function {{ component }}({ dashboard, widgets }: {{ component }}Props) {
    const [loading, setLoading] = useState(false);
    const [widgetData, setWidgetData] = useState(widgets);

    useEffect(() => {
        // Initialize dashboard
        console.log('Dashboard loaded:', dashboard.title);
    }, [dashboard]);

    const refreshWidget = async (widgetName: string) => {
        setLoading(true);
        try {
            const response = await fetch(`/blueprint/dashboard/widgets/${widgetName}/data`);
            if (response.ok) {
                const data = await response.json();
                setWidgetData(prev => ({
                    ...prev,
                    [widgetName]: data
                }));
            }
        } catch (error) {
            console.error('Error refreshing widget:', error);
        } finally {
            setLoading(false);
        }
    };

    return (
        <>
            <Head title={dashboard.title} />
            
            <div className="min-h-screen bg-gray-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                    <div className="mb-8">
                        <h1 className="text-3xl font-bold text-gray-900">
                            {dashboard.title}
                        </h1>
                        <p className="mt-2 text-gray-600">
                            {dashboard.description}
                        </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {Object.entries(dashboard.widgets).map(([widgetName, widgetConfig]) => (
                            <div
                                key={widgetName}
                                className="bg-white rounded-lg shadow p-6"
                                style={{
                                    borderLeft: `4px solid ${dashboard.theme.accent_color}`
                                }}
                            >
                                <div className="flex items-center justify-between mb-4">
                                    <h3 className="text-lg font-semibold text-gray-900">
                                        {widgetConfig.title}
                                    </h3>
                                    <button
                                        onClick={() => refreshWidget(widgetName)}
                                        disabled={loading}
                                        className="text-gray-400 hover:text-gray-600 disabled:opacity-50"
                                    >
                                        <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                        </svg>
                                    </button>
                                </div>
                                
                                <div className="widget-content">
                                    {widgetData[widgetName] && (
                                        <div className="text-2xl font-bold text-gray-900">
                                            {widgetData[widgetName].data?.value || 'N/A'}
                                        </div>
                                    )}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>
        </>
    );
} 