<?php

namespace App\Services;

use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Log;

class {{ class }}
{
    protected array $dashboardConfig;

    public function __construct()
    {
        $this->dashboardConfig = $this->loadDashboardConfig();
    }

    public function getDashboardData(): array
    {
        return [
            'dashboard' => $this->dashboardConfig,
            'widgets' => $this->getWidgetData()
        ];
    }

    public function getWidgetData(?string $widgetName = null): array
    {
        $widgetData = [];
        
        foreach ($this->dashboardConfig['widgets'] ?? [] as $name => $config) {
            if ($widgetName && $name !== $widgetName) {
                continue;
            }
            
            $widgetData[$name] = $this->generateWidgetData($name, $config);
        }
        
        return $widgetData;
    }

    protected function loadDashboardConfig(): array
    {
        return [
            'title' => '{{ dashboard }} Dashboard',
            'description' => 'Dashboard for {{ dashboard }}',
            'layout' => 'admin',
            'theme' => [
                'primary_color' => '#1f2937',
                'secondary_color' => '#6b7280',
                'accent_color' => '#3b82f6'
            ],
            'permissions' => ['view-dashboard'],
            'navigation' => [
                [
                    'name' => 'overview',
                    'title' => 'Overview',
                    'route' => '/dashboard',
                    'icon' => 'home'
                ]
            ],
            'widgets' => [
                'Stats' => [
                    'type' => 'metric',
                    'title' => 'Statistics',
                    'config' => [
                        'format' => 'number',
                        'color' => 'blue'
                    ]
                ]
            ]
        ];
    }

    protected function generateWidgetData(string $widgetName, array $widgetConfig): array
    {
        switch ($widgetConfig['type']) {
            case 'metric':
                return [
                    'data' => ['value' => 100],
                    'config' => $widgetConfig
                ];
            case 'table':
                return [
                    'data' => [
                        'headers' => ['ID', 'Name'],
                        'rows' => [['1', 'Test']]
                    ],
                    'config' => $widgetConfig
                ];
            default:
                return [
                    'data' => [],
                    'config' => $widgetConfig
                ];
        }
    }
} 